clouds              = off
dynamicHandLight    = true
oldLighting         = true
underwaterOverlay   = false
sun                 = false
moon                = true
sky                 = true
vignette            = false
separateAo			= false

##--## Part1 Custom Uniform #-------------------------------------------------------##

#	Biomes----
variable.float.biomeTem = clamp(smooth(0, temperature, 12.0, 12.0), 0.0, 1.0)
variable.float.biomeRainfall = clamp(smooth(3, rainfall, 12.0, 12.0), 0.0, 1.0)
variable.float.biomeRS = if(\
	                        temperature > 0.95, 0.0, \
	                        temperature < 0.15, 0.5, \
	                        1.0)
variable.float.biomeRSsmooth = smooth(1, biomeRS, 12.0, 12.0)
#uniform.float.AdjTemp = temperature
#uniform.float.AdjRainfall = clamp(min(1.0, biomeRS * 2.0), 0.0, 1.0) * AdjTemp
uniform.vec3.BiomeType = vec3(biomeRainfall, biomeRSsmooth, biomeTem)

#	Rain----
variable.float.brs0 = clamp((biomeRSsmooth		) * 2.0, 0.0, 1.0)
variable.float.brs1 = clamp((biomeRSsmooth - 0.5) * 2.0, 0.0, 1.0)
uniform.float.rain0 = rainStrength * brs0 * brs0 * (3.0 - 2.0 * brs0)
uniform.float.rain1 = rainStrength * brs1 * brs1 * (3.0 - 2.0 * brs1)

#	Day----
variable.float.day = worldTime / 24000.0
uniform.float.day_cycle = smooth(4, (moonPhase * (1.0 - day) + frac((moonPhase + 1) / 8.0) * 8.0 * day + frameTimeCounter * 0.0001), 1.0, 1.0)

variable.float.day_i = floor(day_cycle)
variable.float.day_f = frac(day_cycle)
variable.float.day_u = day_f * day_f * (3.0 - 2.0 * day_f)
variable.float.hast0 = frac(day_i * 0.2031)
variable.float.hast01 = hast0 * (39.38 + hast0)
variable.float.hast02 = frac(hast01 * hast01)
variable.float.hast1 = frac((day_i + 1.0) * 0.2031)
variable.float.hast11 = hast1 * (39.38 + hast1)
variable.float.hast12 = frac(hast11 * hast11)
variable.float.day_n = (hast02 * (1.0 - day_u) + hast12 * day_u) * 2.0 - 1.0
uniform.float.cloud_coverage = max(day_n * 0.3, rain0, wetness)

#	Time----
variable.float.sunRise0 =	clamp((worldTime - 23200.0) / 400.0, 	0.0, 1.0)
variable.float.sunRise1 = 	clamp((worldTime			) / 2000.0, 0.0, 1.0)
variable.float.sunRise2 = 	clamp((worldTime - 23000.0) / 1000.0, 0.0, 1.0)
variable.float.sunSet0 	= 	clamp((worldTime - 10000.0) / 2000.0, 0.0, 1.0)
variable.float.sunSet1 	= 	clamp((worldTime - 12600.0) / 170.0, 	0.0, 1.0)
variable.float.sunSet2 	= 	clamp((worldTime - 12500.0) / 250.0, 	0.0, 1.0)
variable.float.moonRise0	= 	clamp((worldTime - 12890.0) / 210.0, 	0.0, 1.0)
variable.float.moonRise1 	= 	clamp((worldTime - 13250.0) / 1000.0,	0.0, 1.0)
variable.float.moonSet0 	= 	clamp((worldTime - 21000.0) / 1500.0, 0.0, 1.0)
variable.float.moonSet1 	= 	clamp((worldTime - 22700.0) / 400.0, 	0.0, 1.0)

uniform.vec4.Time = vec4((sunRise0 * sunRise0 * (3.0 - 2.0 * sunRise0) + 1.0 - sunRise1), \
	(sunRise1 - sunSet0), \
	(sunSet0 - sunSet1 * sunSet1 *(3.0 - 2.0 * sunSet1)), \
	(sunSet1 * sunSet1 * (3.0 - 2.0 * sunSet1) - sunRise0 * sunRise0 * (3.0 - 2.0 * sunRise0)))
uniform.vec4.nTime = vec4((moonRise0 * moonRise0 * (3.0 - 2.0 * moonRise0) - moonRise1), \
	(moonRise1 - moonSet0), \
	(moonSet0 - moonSet1 * moonSet1 *(3.0 - 2.0 * moonSet1)), \
	(moonSet1 * moonSet1 * (3.0 - 2.0 * moonSet1) + 1.0 - moonRise0 * moonRise0 * (3.0 - 2.0 * moonRise0)))
uniform.vec4.SunTime0 = vec4((sunRise2 * sunRise2 * (3.0 - 2.0 * sunRise2) + 1.0 - sunRise1), \
	(sunRise1 - sunSet0), \
	(sunSet0 - sunSet2 * sunSet2 *(3.0 - 2.0 * sunSet2)), \
	(sunSet2 * sunSet2 * (3.0 - 2.0 * sunSet2) - sunRise2 * sunRise2 * (3.0 - 2.0 * sunRise2)))

#	Pixel----
uniform.vec2.pixel = vec2(1.0 / viewWidth, 1.0 / viewHeight)

#	Vignette----
uniform.float.valLive = if(is_alive, 1.0, 0.0)
variable.float.valHurt = min(smooth(2, if(is_hurt, 1.3, 0), 0, 4), 1)
uniform.vec3.vignetteColor = vec3(0.2 * valHurt, 0.0, 0.0)

#	Light Vector----
uniform.float.fov = atan(1.0 / gbufferProjection.1.1)
uniform.float.mulfov = if(\
	isEyeInWater > 1, gbufferProjection.1.1 * tan(fov * 0.85), \
	1.0)

variable.float.sunVectorNorm = 1.0 / sqrt((sunPosition.x * sunPosition.x) + (sunPosition.y * sunPosition.y) + (sunPosition.z * sunPosition.z))
uniform.vec3.sunVectorView = vec3(sunPosition.x * sunVectorNorm, sunPosition.y * sunVectorNorm, sunPosition.z * sunVectorNorm)
variable.float.sunVectorX = gbufferModelViewInverse.0.0 * sunPosition.x + gbufferModelViewInverse.1.0 * sunPosition.y + gbufferModelViewInverse.2.0 * sunPosition.z
variable.float.sunVectorY = gbufferModelViewInverse.0.1 * sunPosition.x + gbufferModelViewInverse.1.1 * sunPosition.y + gbufferModelViewInverse.2.1 * sunPosition.z
variable.float.sunVectorZ = gbufferModelViewInverse.0.2 * sunPosition.x + gbufferModelViewInverse.1.2 * sunPosition.y + gbufferModelViewInverse.2.2 * sunPosition.z
uniform.vec3.sunVector = vec3(sunVectorX * sunVectorNorm, sunVectorY * sunVectorNorm, sunVectorZ * sunVectorNorm)

variable.float.moonVectorNorm = 1.0 / sqrt((moonPosition.x * moonPosition.x) + (moonPosition.y * moonPosition.y) + (moonPosition.z * moonPosition.z))
uniform.vec3.moonVectorView = vec3(moonPosition.x * moonVectorNorm, moonPosition.y * moonVectorNorm, moonPosition.z * moonVectorNorm)
variable.float.moonVectorX = gbufferModelViewInverse.0.0 * moonPosition.x + gbufferModelViewInverse.1.0 * moonPosition.y + gbufferModelViewInverse.2.0 * moonPosition.z
variable.float.moonVectorY = gbufferModelViewInverse.0.1 * moonPosition.x + gbufferModelViewInverse.1.1 * moonPosition.y + gbufferModelViewInverse.2.1 * moonPosition.z
variable.float.moonVectorZ = gbufferModelViewInverse.0.2 * moonPosition.x + gbufferModelViewInverse.1.2 * moonPosition.y + gbufferModelViewInverse.2.2 * moonPosition.z
uniform.vec3.moonVector = vec3(moonVectorX * moonVectorNorm, moonVectorY * moonVectorNorm, moonVectorZ * moonVectorNorm)

variable.float.shadowLightVectorNorm = 1.0 / sqrt((shadowLightPosition.x * shadowLightPosition.x) + (shadowLightPosition.y * shadowLightPosition.y) + (shadowLightPosition.z * shadowLightPosition.z))
uniform.vec3.shadowLightVectorView = vec3(shadowLightPosition.x * moonVectorNorm, shadowLightPosition.y * moonVectorNorm, shadowLightPosition.z * moonVectorNorm)
variable.float.shadowLightVectorX = gbufferModelViewInverse.0.0 * shadowLightPosition.x + gbufferModelViewInverse.1.0 * shadowLightPosition.y + gbufferModelViewInverse.2.0 * shadowLightPosition.z
variable.float.shadowLightVectorY = gbufferModelViewInverse.0.1 * shadowLightPosition.x + gbufferModelViewInverse.1.1 * shadowLightPosition.y + gbufferModelViewInverse.2.1 * shadowLightPosition.z
variable.float.shadowLightVectorZ = gbufferModelViewInverse.0.2 * shadowLightPosition.x + gbufferModelViewInverse.1.2 * shadowLightPosition.y + gbufferModelViewInverse.2.2 * shadowLightPosition.z
uniform.vec3.shadowLightVector = vec3(shadowLightVectorX * shadowLightVectorNorm, shadowLightVectorY * shadowLightVectorNorm, shadowLightVectorZ * shadowLightVectorNorm)

profile.FRESHING=CALCULATECLOUDDEPTH=300 HEAVIER_WATER=0 DARKNESS=2.0 SATURATION=0.65 !LOW_QUALITY_CALCULATECLOUDS
profile.NEW_CINEMATIC=GODRAYS_STRENGTH_SUNSETRISE=24 ABC CALCULATECLOUDDEPTH=500 HEAVIER_WATER=1 WHITECLOUDS=1 SATURATION=0.8 AAA=-0.7 RAYLEIGH_AMOUNT=2 NEW_RAYLEIGH_AMOUNT=1.5 GOLDENSKY CLOUD_PLANE2 MOREVOLUMETRIC_CLOUDS BLOOM_STRENGTH=0.016 WAVE_HEIGHT=0.35 !ACES_TONEMAPPING !WEATHER SKYLIGHT_DAY_RED=0.6 SKYLIGHT_DAY_BULE=0.6 SKYLIGHT_DAY_GREEN=1.0 RAYLEIGH_AMOUNT=5.0 DARKNESS=2.5 !DOF1 DOF !CLOUD_PLANE1 CALCULATECLOUDS !SMOOTH_SKY SUNLIGHTONBLOCKS=1.5 !NOCLOUDS2DAYTIME LOW_QUALITY_CALCULATECLOUDS1 !LOW_QUALITY_CALCULATECLOUDS MOON_LIGHT_NIGHT=0.4 SUNLIGHTSTRENGTH=500.0 GODRAYS_STRENGTH_DAY=2.0
profile.OLD_CINEMATIC=GODRAYS_STRENGTH_SUNSETRISE=24 ABC HEAVIER_WATER=1 RAYLEIGH_AMOUNT=2 NEW_RAYLEIGH_AMOUNT=1.5 WHITECLOUDS=4 !CLOUD_PLANE2 !MOREVOLUMETRIC_CLOUDS BLOOM_STRENGTH=0.016 WAVE_HEIGHT=0.35 !ACES_TONEMAPPING !WEATHER SKYLIGHT_DAY_RED=0.6 SKYLIGHT_DAY_BULE=0.6 SKYLIGHT_DAY_GREEN=1.0 RAYLEIGH_AMOUNT=5.0 DARKNESS=2.5 !DOF1 DOF !CLOUD_PLANE1 CALCULATECLOUDS !SMOOTH_SKY SUNLIGHTONBLOCKS=1.5 !NOCLOUDS2DAYTIME LOW_QUALITY_CALCULATECLOUDS1 !LOW_QUALITY_CALCULATECLOUDS MOON_LIGHT_NIGHT=0.4 SUNLIGHTSTRENGTH=500.0 GODRAYS_STRENGTH_DAY=2.0
profile.FLUENT=GODRAYS_STRENGTH_SUNSETRISE=12 !ABC HEAVIER_WATER=0 AAA=0 RAYLEIGH_AMOUNT=5 NEW_RAYLEIGH_AMOUNT=1 BLOOM_STRENGTH=0.006 !MOREVOLUMETRIC_CLOUDS !GOLDENSKY CALCULATECLOUDDEPTH=500 !Cinematic_Effect1 ACES_TONEMAPPING !DOF DOF1 !CALCULATECLOUDS CLOUD_PLANE1 CLOUD_PLANE2 NOCLOUDS2DAYTIME !LOW_QUALITY_CALCULATECLOUDS2 WHITECLOUDS=1 LOW_QUALITY_CALCULATECLOUDS MOON_LIGHT_NIGHT=0.6 SUNLIGHTSTRENGTH=500.0 GODRAYS_STRENGTH_DAY=1.0
profile.NOSTALGIC=LOW_SATURATION_NIGHT=0.4 MOON_LIGHT_NIGHT=0.8 DARKNESS=3.5 BRIGHTNESS=0.8 OLD_PHOTOS SATURATION=0.65 Cinematic_Effect1 SUNLIGHTONBLOCKS=1 HEAVIER_WATER=2
profile.CLASSICAL=LOW_SATURATION_NIGHT=0.1 MOON_LIGHT_NIGHT=0.6 !Cinematic_Effect1 SATURATION=0.8 !OLD_PHOTOS BRIGHTNESS=0.9 HEAVIER_WATER=1 SUNLIGHTSTRENGTH=500.0 !ACES_TONEMAPPING CINEMATICEFFECTWIDTH=0.05 BLUR_AMOUNT=0.03 SKYLIGHT_DAY_RED=1.0 SKYLIGHT_DAY_BULE=1.0 RAYLEIGH_AMOUNT=1.0 DARKNESS=1.0 DOF1 !DOF CLOUD_PLANE1 !CALCULATECLOUDS SMOOTH_SKY CALCULATECLOUDSQUALITY=35 SUNLIGHTONBLOCKS=1 CLOUD_PLANE2 NOCLOUDS2DAYTIME !LOW_QUALITY_CALCULATECLOUDS1

##--## Part2 Sliders #--------------------------------------------------------------##
sliders=POINTLIGHT_COLOR_TEMPERATURE shadowMapResolution NEW_RAYLEIGH_AMOUNT TEXTURE_RESOLUTION PARALLAXDEPTH PARALLAXDISTANCE SUNLIGHTSTRENGTH BLOOM_STRENGTH BLUR_AMOUNT BRIGHTNESS GODRAYS_STRENGTH_DAY GODRAYS_STRENGTH_NIGHT GODRAYS_STRENGTH_SUNSETRISE EdgeBlurAmount MAX_BLUR_AMOUNT MaxDistanceBlurAmount WATER_WAVING_SPEED WAVE_HEIGHT SHADOWS_SOFTNESS

##--## Part3 Screen #---------------------------------------------------------------##
screen=<profile> version [Modified] [ATMOSPHERICS] [LIGHTING] [SURFACE] [VISUAL_EFFECT] [DAYTIME] [NIGHT] [MISC] [WATER] <empty> <empty> ACES_TONEMAPPING SATURATION DARKNESS WEATHER BRIGHTNESS OLD_PHOTOS

screen.ATMOSPHERICS=[CLOUDS] LOW_QUALITY_CALCULATECLOUDS LOW_QUALITY_CALCULATECLOUDS2 TEST <empty> <empty> ATMOSPHERIC_SCATTERING RAYLEIGH_AMOUNT NEW_ATMOSPHERIC_SCATTERING NEW_RAYLEIGH_AMOUNT <empty> <empty> SMOOTH_SKY <empty> <empty> <empty> MOREVOLUMETRIC_CLOUDS
screen.LIGHTING=shadowMapResolution <empty> <empty> <empty> POINTLIGHT_COLOR_TEMPERATURE <empty> <empty> <empty> HELDLIGHTBRIGHTNESS <empty> <empty> <empty> SUNLIGHTONBLOCKS 
screen.SURFACE=PARALLAX TEXTURE_RESOLUTION PARALLAXDEPTH PARALLAXDISTANCE NO_LQ_POM
screen.VISUAL_EFFECT=[BLOOM] [MB] [OLD_DOFS] [A_NEW_DOF] [CINEMATIC_EFFECT] [LENS_EFFECTS] <empty> <empty> COLOR_BOOST RAINFOG
screen.CLOUDS=CLOUD_PLANE1 CLOUD_PLANE2 CLOUDHEIGHT1 CLOUDHEIGHT2 PLANE_CLOUD_SPEED1 PLANE_CLOUD_SPEED2 <empty> <empty> CALCULATECLOUDS CLOUDHEIGHT3 PLANE_CLOUD_SPEED3 CALCULATECLOUDSQUALITY CALCULATECLOUDDEPTH CALCULATECLOUDSDENSITY CALCULATECLOUDSCONCENTRATION WHITECLOUDS
screen.NIGHT=STAR <empty> <empty> <empty> LOW_SATURATION_NIGHT <empty> <empty> <empty> MOON_LIGHT_NIGHT SKYLIGHT_NIGHT NOCLOUDSNIGHT NOCALCULATECLOUDSNIGHT <empty> <empty> FANTASIC_NIGHTSKY 
screen.DAYTIME=SUNLIGHTSTRENGTH ADDSUNGLOW <empty> <empty> SKYLIGHT_DAY_RED SKYLIGHT_DAY_GREEN SKYLIGHT_DAY_BULE WATERCOLORCHANGE <empty> <empty> NOCLOUDS2DAYTIME
screen.MISC=WAVING_GRASS WAVING_WHEAT WAVING_LEAVES WAVING_FIRE WAVING_VINES WAVING_LILIES <empty> <empty> TEMP_UNDERGROUND_LIGHT_FIX OLD_LIGHTING_FIX TEXTURE_FIX ANIMATE_USING_WORLDTIME LOCAL_OPERATOR NSL GOLDENSKY
screen.A_NEW_DOF=DOF HEXAGONAL_BOKEH <empty> <empty> FOCUS_BLUR BlurAmount <empty> <empty> DISTANCE_BLUR MaxDistanceBlurAmount DistanceBlurRange <empty> <empty> <empty> EDGE_BLUR EdgeBlurAmount EdgeBlurDecline
screen.WATER=WATER_PARALLAX WAVE_HEIGHT WATER_WAVING_SPEED NEW_WATER_REFLECT REFLECTEDCLOUDPLANE ICE_REFELECTION WATERFOGCOLOR WATERTRANSPARENCY UNDERWATERVISIBILITY UNDERWATERFOG HEAVIER_WATER
screen.BLOOM=BLOOM_EFFECTS BLOOM_STRENGTH
screen.MB=MOTIONBLUR BLUR_AMOUNT
screen.OLD_DOFS=DOF1 DOF2  MAX_BLUR_AMOUNT NOHANDDOF
screen.CINEMATIC_EFFECT=Cinematic_Effect1 Cinematic_Effect2 CINEMATICEFFECTWIDTH
screen.LENS_EFFECTS=GOD_RAYS GODRAYS_STRENGTH_DAY GODRAYS_STRENGTH_SUNSETRISE GODRAYS_STRENGTH_NIGHT <empty> <empty> HEXAGON_LENS LENS_FLARE LF
###PLEASE ADD NEW FEATURES/MODIFICATIONS TO THIS MENU
sreen.Modified=POINTLIGHT_COLOR_TEMPERATURE WAVE_PLANT_SPEED SHADOWS_SOFTNESS